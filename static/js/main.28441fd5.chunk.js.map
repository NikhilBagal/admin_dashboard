{"version":3,"sources":["component/NavBar.js","component/chart.js","component/DashBoard.js","component/Main.js","component/users.js","component/Pages.js","component/Apps.js","component/Body.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","aria-hidden","MyChart","data","React","useMemo","label","x","y","axes","primary","type","position","style","id","toggleClick","e","navSelector","document","querySelector","classList","contains","remove","add","addEventListener","clientX","offsetWidth","DashBoard","onClick","Main","Users","Pages","src","alt","Apps","Body","basename","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28441fd5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./NavBar.css\"\n\nconst NavBar = () => {\n    return ( \n        <nav className=\"navigationBar\">\n                <ul>\n                    <li className=\"parentList\">\n                    <Link to=\"/\"><p>Dashboard</p></Link> \n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\n                        <Link to=\"/\"><p>Home</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\n                        <Link to=\"/users\"><p>Users</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <Link to=\"/pages\"><p>Pages</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-cloud\" aria-hidden=\"true\"></i>\n                        <Link to=\"/apps\"><p>Apps</p></Link>\n                    </li>\n                </ul>\n            </nav>\n     );\n}\n \nexport default NavBar;","import React from 'react'\nimport { Chart } from 'react-charts'\n \nfunction MyChart() {\n    const data = React.useMemo(\n      () => [\n        {\n          label: 'Series 1',\n          data: [{ x: 1, y: 10 }, { x: 2, y: 10 }, { x: 3, y: 10 }]\n        },\n        {\n          label: 'Series 2',\n          data: [{ x: 1, y: 10 }, { x: 2, y: 10 }, { x: 3, y: 10 }]\n        },\n        {\n          label: 'Series 3',\n          data: [{ x: 1, y: 10 }, { x: 2, y: 10 }, { x: 3, y: 10 }]\n        }\n      ],\n      []\n    )\n   \n    const axes = React.useMemo(\n      () => [\n        { primary: true, type: 'linear', position: 'bottom' },\n        { type: 'linear', position: 'left' }\n      ],\n      []\n    )\n   \n    return (\n      <div\n        style={{\n          \n        }}\n      id=\"chart\">\n        <Chart data={data} axes={axes} />\n      </div>\n    )\n  }\n\nexport default MyChart","import React from 'react';\nimport \"./DashBoard.css\"\nimport Chart from \"./chart\"\n\nconst DashBoard = () => {\n    return ( \n        <div className=\"dashboard\">\n            <button id=\"toggle\" onClick={toggleClick}><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></button>\n            <button id=\"logOut\">Log Out</button>\n            <h1>Welcome to DashBoard.</h1>\n            <p>Discover this dashboard to get insights on your project.</p>\n            <div id=\"chart\">\n                <Chart/>\n            </div>\n        </div>\n     );\n}\n\nfunction toggleClick(e){\n    var navSelector = document.querySelector(\"nav\")\n    if(navSelector.classList.contains(\"active\")){\n        navSelector.classList.remove(\"active\")\n    }else {\n        navSelector.classList.add(\"active\")\n    }\n    var bodySelector = document.querySelector(\"body\")\n    bodySelector.addEventListener(\"click\", (e)=>{\n        if(e.clientX > navSelector.offsetWidth){\n            navSelector.classList.remove(\"active\")\n        }\n    })\n}\n \nexport default DashBoard;","import React from 'react';\nimport NavBar from './NavBar'\nimport DashBoard from './DashBoard'\nimport \"./Main.css\"\n\nconst Main = () => {\n    return ( \n        <div className=\"main\">\n            <NavBar/>\n            <DashBoard />\n        </div>\n     );\n}\n \nexport default Main;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport \"./users.css\"\n\nconst Users = () => {\n    return ( \n        <div className=\"users\">\n            <button id=\"toggle\" onClick={toggleClick}><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></button>\n            <nav className=\"navigationBar\">\n                <ul>\n                    <li className=\"parentList\">\n                    <Link to=\"/\"><p>Dashboard</p></Link> \n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\n                        <Link to=\"/\"><p>Home</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\n                        <Link to=\"/users\"><p>Users</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <Link to=\"/pages\"><p>Pages</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-cloud\" aria-hidden=\"true\"></i>\n                        <Link to=\"/apps\"><p>Apps</p></Link>\n                    </li>\n                </ul>\n            </nav>\n            <div className=\"users-div\">\n                <table>\n                    <tbody>\n                    <tr>\n                        <th>Company</th>\n                        <th>Contact</th>\n                        <th>Country</th>\n                    </tr>\n                    <tr>\n                        <td>Alfreds Futterkiste</td>\n                        <td>Maria Anders</td>\n                        <td>Germany</td>\n                    </tr>\n                    <tr>\n                        <td>Centro comercial Moctezuma</td>\n                        <td>Francisco Chang</td>\n                        <td>Mexico</td>\n                    </tr>\n                    <tr>\n                        <td>Ernst Handel</td>\n                        <td>Roland Mendel</td>\n                        <td>Austria</td>\n                    </tr>\n                    <tr>\n                        <td>Island Trading</td>\n                        <td>Helen Bennett</td>\n                        <td>UK</td>\n                    </tr>\n                    <tr>\n                        <td>Laughing Bacchus Winecellars</td>\n                        <td>Yoshi Tannamuri</td>\n                        <td>Canada</td>\n                    </tr>\n                    <tr>\n                        <td>Magazzini Alimentari Riuniti</td>\n                        <td>Giovanni Rovelli</td>\n                        <td>Italy</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n     );\n}\n \n\nfunction toggleClick(e){\n    var navSelector = document.querySelector(\"nav\")\n    if(navSelector.classList.contains(\"active\")){\n        navSelector.classList.remove(\"active\")\n    }else {\n        navSelector.classList.add(\"active\")\n    }\n    var bodySelector = document.querySelector(\"body\")\n    bodySelector.addEventListener(\"click\", (e)=>{\n        if(e.clientX > navSelector.offsetWidth){\n            navSelector.classList.remove(\"active\")\n        }\n    })\n}\n \n\nexport default Users;","import React from 'react';\nimport {Link} from \"react-router-dom\"\nimport \"./Pages.css\"\n\nconst Pages = () => {\n    return (  \n        <div className=\"pages\">\n            <button id=\"toggle\" onClick={toggleClick}><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></button>\n            <nav className=\"navigationBar\">\n                <ul>\n                    <li className=\"parentList\">\n                    <Link to=\"/\"><p>Dashboard</p></Link> \n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\n                        <Link to=\"/\"><p>Home</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\n                        <Link to=\"/users\"><p>Users</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <Link to=\"/pages\"><p>Pages</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-cloud\" aria-hidden=\"true\"></i>\n                        <Link to=\"/apps\"><p>Apps</p></Link>\n                    </li>\n                </ul>\n            </nav>\n            <div className=\"pages-div\">\n                <img src=\"https://themefisher.com/wp-content/uploads/edd/2019/04/bexer-bootstrap-business-template.jpg\" alt=\"sample images\"></img>\n                <img src=\"https://uicookies.com/wp-content/uploads/2018/12/medical-website-template.jpg\" alt=\"sample image2\"></img>\n            </div>\n        </div>\n    );\n}\n\nfunction toggleClick(e){\n    var navSelector = document.querySelector(\"nav\")\n    if(navSelector.classList.contains(\"active\")){\n        navSelector.classList.remove(\"active\")\n    }else {\n        navSelector.classList.add(\"active\")\n    }\n    var bodySelector = document.querySelector(\"body\")\n    bodySelector.addEventListener(\"click\", (e)=>{\n        if(e.clientX > navSelector.offsetWidth){\n            navSelector.classList.remove(\"active\")\n        }\n    })\n}\n \nexport default Pages;","import React from 'react';\nimport \"./Apps.css\";\nimport {Link} from 'react-router-dom';\n\nconst Apps = () => {\n    return ( \n        <div className=\"apps\">\n            <button id=\"toggle\" onClick={toggleClick}><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></button>\n            <nav className=\"navigationBar\">\n                <ul>\n                    <li className=\"parentList\">\n                    <Link to=\"/\"><p>Dashboard</p></Link> \n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\n                        <Link to=\"/\"><p>Home</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\n                        <Link to=\"/users\"><p>Users</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-file\" aria-hidden=\"true\"></i>\n                        <Link to=\"/pages\"><p>Pages</p></Link>\n                    </li>\n                    <li className=\"parentList\">\n                        <i className=\"fa fa-cloud\" aria-hidden=\"true\"></i>\n                        <Link to=\"/apps\"><p>Apps</p></Link>\n                    </li>\n                </ul>\n            </nav>\n            <div className=\"apps-div\">\n                <h1>Coming Soon...</h1>\n            </div>\n        </div>\n     );\n}\n\nfunction toggleClick(e){\n    var navSelector = document.querySelector(\"nav\")\n    if(navSelector.classList.contains(\"active\")){\n        navSelector.classList.remove(\"active\")\n    }else {\n        navSelector.classList.add(\"active\")\n    }\n    var bodySelector = document.querySelector(\"body\")\n    bodySelector.addEventListener(\"click\", (e)=>{\n        if(e.clientX > navSelector.offsetWidth){\n            navSelector.classList.remove(\"active\")\n        }\n    })\n}\n \n \nexport default Apps;","import React from 'react';\nimport Main from './Main';\nimport Users from './users';\nimport Pages from './Pages';\nimport Apps from './Apps'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport \"./Body.css\"\n\nconst Body = () => {\n    return (\n        <Router basename=\"/admin_dashboard\">\n            <div className=\"body\">\n                <Switch>\n                    <Route path=\"/\" exact component={Main}/>\n                    <Route path=\"/users\" exact component={Users}/>\n                    <Route path=\"/pages\" exact component={Pages}/>\n                    <Route path=\"/apps\" exact component={Apps}/>\n                </Switch>\n            </div> \n        </Router>\n        \n     );\n}\n \nexport default Body;","import React from 'react';\nimport './App.css';\nimport Body from \"./component/Body\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}